{"ast":null,"code":"var _jsxFileName = \"E:\\\\NodeJS\\\\mongo\\\\New folder\\\\ema-john-with-auth\\\\src\\\\components\\\\Review\\\\Review.js\";\nimport React, { useEffect, useState } from 'react';\nimport { getDatabaseCart, removeFromDatabaseCart, processOrder } from '../../utilities/databaseManager';\nimport fakeData from '../../fakeData';\nimport ReviewItem from '../ReviewItem/ReviewItem';\nimport Cart from '../Cart/Cart';\nimport happyImage from '../../images/giphy.gif';\nimport { useHistory } from 'react-router-dom';\n\nconst Review = () => {\n  const [cart, setCart] = useState([]);\n  const [orderPlaced, setOrderPlaced] = useState(false);\n  const history = useHistory();\n\n  const handleProceedCheckout = () => {\n    history.push('/shipment');\n  };\n\n  const removeProduct = productKey => {\n    const newCart = cart.filter(pd => pd.key !== productKey);\n    setCart(newCart);\n    removeFromDatabaseCart(productKey);\n  };\n\n  useEffect(() => {\n    //cart\n    const savedCart = getDatabaseCart();\n    const productKeys = Object.keys(savedCart);\n    fetch('http://localhost:5000/productsByKeys', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify()\n    }).then(res => res.json(productKeys)).then(data => setCart(data));\n  }, []);\n  let thankyou;\n\n  if (orderPlaced) {\n    thankyou = React.createElement(\"img\", {\n      src: happyImage,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"twin-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"product-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, cart.map(pd => React.createElement(ReviewItem, {\n    key: pd.key,\n    removeProduct: removeProduct,\n    product: pd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), thankyou), React.createElement(\"div\", {\n    className: \"cart-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Cart, {\n    cart: cart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: handleProceedCheckout,\n    className: \"main-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Proceed Checkout\"))));\n};\n\nexport default Review;","map":{"version":3,"sources":["E:/NodeJS/mongo/New folder/ema-john-with-auth/src/components/Review/Review.js"],"names":["React","useEffect","useState","getDatabaseCart","removeFromDatabaseCart","processOrder","fakeData","ReviewItem","Cart","happyImage","useHistory","Review","cart","setCart","orderPlaced","setOrderPlaced","history","handleProceedCheckout","push","removeProduct","productKey","newCart","filter","pd","key","savedCart","productKeys","Object","keys","fetch","method","headers","body","JSON","stringify","then","res","json","data","thankyou","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,eAAT,EAA0BC,sBAA1B,EAAkDC,YAAlD,QAAsE,iCAAtE;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAMc,OAAO,GAAGN,UAAU,EAA1B;;AAEA,QAAMO,qBAAqB,GAAG,MAAM;AAChCD,IAAAA,OAAO,CAACE,IAAR,CAAa,WAAb;AACH,GAFD;;AAIA,QAAMC,aAAa,GAAIC,UAAD,IAAgB;AAClC,UAAMC,OAAO,GAAGT,IAAI,CAACU,MAAL,CAAYC,EAAE,IAAIA,EAAE,CAACC,GAAH,KAAWJ,UAA7B,CAAhB;AACAP,IAAAA,OAAO,CAACQ,OAAD,CAAP;AACAjB,IAAAA,sBAAsB,CAACgB,UAAD,CAAtB;AACH,GAJD;;AAMAnB,EAAAA,SAAS,CAAC,MAAI;AACV;AACA,UAAMwB,SAAS,GAAGtB,eAAe,EAAjC;AACA,UAAMuB,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAYH,SAAZ,CAApB;AAEAI,IAAAA,KAAK,CAAC,sCAAD,EAAyC;AAC1CC,MAAAA,MAAM,EAAC,MADmC;AAE1CC,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB,OAFiC;AAG1CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL;AAHoC,KAAzC,CAAL,CAKCC,IALD,CAKMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,CAASX,WAAT,CALb,EAMCS,IAND,CAMMG,IAAI,IAAIzB,OAAO,CAACyB,IAAD,CANrB;AAOH,GAZQ,EAYN,EAZM,CAAT;AAcA,MAAIC,QAAJ;;AACA,MAAGzB,WAAH,EAAe;AACXyB,IAAAA,QAAQ,GAAG;AAAK,MAAA,GAAG,EAAE9B,UAAV;AAAsB,MAAA,GAAG,EAAC,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAX;AACH;;AACD,SACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQG,IAAI,CAAC4B,GAAL,CAASjB,EAAE,IAAI,oBAAC,UAAD;AACX,IAAA,GAAG,EAAEA,EAAE,CAACC,GADG;AAEX,IAAA,aAAa,EAAIL,aAFN;AAGX,IAAA,OAAO,EAAEI,EAHE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAf,CAFR,EAOMgB,QAPN,CADJ,EAUI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE3B,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,OAAO,EAAEK,qBAAjB;AAAwC,IAAA,SAAS,EAAC,aAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,CADJ,CAVJ,CADJ;AAkBH,CAnDD;;AAqDA,eAAeN,MAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getDatabaseCart, removeFromDatabaseCart, processOrder } from '../../utilities/databaseManager';\r\nimport fakeData from '../../fakeData';\r\nimport ReviewItem from '../ReviewItem/ReviewItem';\r\nimport Cart from '../Cart/Cart';\r\nimport happyImage from '../../images/giphy.gif';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Review = () => {\r\n    const [cart, setCart] = useState([]);\r\n    const [orderPlaced, setOrderPlaced] = useState(false);\r\n    const history = useHistory()\r\n\r\n    const handleProceedCheckout = () => {\r\n        history.push('/shipment');\r\n    }\r\n\r\n    const removeProduct = (productKey) => {\r\n        const newCart = cart.filter(pd => pd.key !== productKey);\r\n        setCart(newCart);\r\n        removeFromDatabaseCart(productKey);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        //cart\r\n        const savedCart = getDatabaseCart();\r\n        const productKeys = Object.keys(savedCart);\r\n\r\n        fetch('http://localhost:5000/productsByKeys', {\r\n            method:'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify()\r\n        })\r\n        .then(res => res.json(productKeys))\r\n        .then(data => setCart(data))\r\n    }, []);\r\n\r\n    let thankyou;\r\n    if(orderPlaced){\r\n        thankyou = <img src={happyImage} alt=\"\"/>\r\n    } \r\n    return (\r\n        <div className=\"twin-container\">\r\n            <div className=\"product-container\">\r\n                {\r\n                    cart.map(pd => <ReviewItem \r\n                        key={pd.key}\r\n                        removeProduct = {removeProduct}\r\n                        product={pd}></ReviewItem>)\r\n                }\r\n                { thankyou }\r\n            </div>\r\n            <div className=\"cart-container\">\r\n                <Cart cart={cart}>\r\n                    <button onClick={handleProceedCheckout} className=\"main-button\">Proceed Checkout</button>\r\n                </Cart>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Review;"]},"metadata":{},"sourceType":"module"}