{"ast":null,"code":"var _jsxFileName = \"E:\\\\NodeJS\\\\mongo\\\\New folder\\\\ema-john-with-auth\\\\src\\\\components\\\\Shop\\\\Shop.js\";\nimport React, { useEffect } from 'react';\nimport fakeData from '../../fakeData';\nimport { useState } from 'react';\nimport './Shop.css';\nimport Product from '../Product/Product';\nimport Cart from '../Cart/Cart';\nimport { addToDatabaseCart, getDatabaseCart } from '../../utilities/databaseManager';\nimport { Link } from 'react-router-dom';\n\nconst Shop = () => {\n  // const first10 = fakeData.slice(0,10);\n  const [products, setProducts] = useState([]);\n  const [cart, setCart] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:5000/products').then(res => res.json()).then(data => setProducts(data));\n  }, []);\n  useEffect(() => {\n    const savedCart = getDatabaseCart();\n    const productKeys = Object.keys(savedCart);\n    fetch('http://localhost:5000/productsByKeys', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(productKeys)\n    }).then(res => res.json()).then(data => setCart(data));\n  }, []);\n\n  const handleAddProduct = product => {\n    const toBeAddedKey = product.key;\n    const sameProduct = cart.find(pd => pd.key === toBeAddedKey);\n    let count = 1;\n    let newCart;\n\n    if (sameProduct) {\n      count = sameProduct.quantity + 1;\n      sameProduct.quantity = count;\n      const others = cart.filter(pd => pd.key !== toBeAddedKey);\n      newCart = [...others, sameProduct];\n    } else {\n      product.quantity = 1;\n      newCart = [...cart, product];\n    }\n\n    setCart(newCart);\n    addToDatabaseCart(product.key, count);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"twin-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"product-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, products.map(pd => React.createElement(Product, {\n    key: pd.key,\n    showAddToCart: true,\n    handleAddProduct: handleAddProduct,\n    product: pd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"cart-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Cart, {\n    cart: cart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/review\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"main-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Review Order\")))));\n};\n\nexport default Shop;","map":{"version":3,"sources":["E:/NodeJS/mongo/New folder/ema-john-with-auth/src/components/Shop/Shop.js"],"names":["React","useEffect","fakeData","useState","Product","Cart","addToDatabaseCart","getDatabaseCart","Link","Shop","products","setProducts","cart","setCart","fetch","then","res","json","data","savedCart","productKeys","Object","keys","method","headers","body","JSON","stringify","handleAddProduct","product","toBeAddedKey","key","sameProduct","find","pd","count","newCart","quantity","others","filter","map"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport fakeData from '../../fakeData';\r\nimport { useState } from 'react';\r\nimport './Shop.css';\r\nimport Product from '../Product/Product';\r\nimport Cart from '../Cart/Cart';\r\nimport { addToDatabaseCart, getDatabaseCart } from '../../utilities/databaseManager';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Shop = () => {\r\n    // const first10 = fakeData.slice(0,10);\r\n    const [products, setProducts] = useState([]);\r\n    const [cart, setCart] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:5000/products')\r\n            .then(res => res.json())\r\n            .then(data => setProducts(data))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const savedCart = getDatabaseCart();\r\n        const productKeys = Object.keys(savedCart);\r\n        fetch('http://localhost:5000/productsByKeys', {\r\n            method:'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify(productKeys)\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => setCart(data))\r\n    }, [])\r\n\r\n    const handleAddProduct = (product) => {\r\n        const toBeAddedKey = product.key;\r\n        const sameProduct = cart.find(pd => pd.key === toBeAddedKey);\r\n        let count = 1;\r\n        let newCart;\r\n        if (sameProduct) {\r\n            count = sameProduct.quantity + 1;\r\n            sameProduct.quantity = count;\r\n            const others = cart.filter(pd => pd.key !== toBeAddedKey);\r\n            newCart = [...others, sameProduct];\r\n        }\r\n        else {\r\n            product.quantity = 1;\r\n            newCart = [...cart, product];\r\n        }\r\n        setCart(newCart);\r\n        addToDatabaseCart(product.key, count);\r\n    }\r\n\r\n    return (\r\n        <div className=\"twin-container\">\r\n            <div className=\"product-container\">\r\n                {\r\n                    products.map(pd => <Product\r\n                        key={pd.key}\r\n                        showAddToCart={true}\r\n                        handleAddProduct={handleAddProduct}\r\n                        product={pd}\r\n                    ></Product>)\r\n                }\r\n            </div>\r\n            <div className=\"cart-container\">\r\n                <Cart cart={cart}>\r\n                    <Link to=\"/review\">\r\n                        <button className=\"main-button\">Review Order</button>\r\n                    </Link>\r\n                </Cart>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Shop;"]},"metadata":{},"sourceType":"module"}