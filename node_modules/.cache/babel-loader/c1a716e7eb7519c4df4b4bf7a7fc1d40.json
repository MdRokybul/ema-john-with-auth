{"ast":null,"code":"var _jsxFileName = \"E:\\\\NodeJS\\\\mongo\\\\New folder\\\\ema-john-with-auth\\\\src\\\\components\\\\Shop\\\\Shop.js\";\nimport React, { useEffect } from 'react';\nimport fakeData from '../../fakeData';\nimport { useState } from 'react';\nimport './Shop.css';\nimport Product from '../Product/Product';\nimport Cart from '../Cart/Cart';\nimport { addToDatabaseCart, getDatabaseCart } from '../../utilities/databaseManager';\nimport { Link } from 'react-router-dom';\n\nconst Shop = () => {\n  const first10 = fakeData.slice(0, 10);\n  const [products, setProducts] = useState(first10);\n  const [cart, setCart] = useState([]);\n  useEffect(() => {\n    const savedCart = getDatabaseCart();\n    const productKeys = Object.keys(savedCart);\n    const previousCart = productKeys.map(existingKey => {\n      const product = fakeData.find(pd => pd.key === existingKey);\n      product.quantity = savedCart[existingKey];\n      return product;\n    });\n    setCart(previousCart);\n  }, []);\n\n  const handleAddProduct = product => {\n    const toBeAddedKey = product.key;\n    const sameProduct = cart.find(pd => pd.key === toBeAddedKey);\n    let count = 1;\n    let newCart;\n\n    if (sameProduct) {\n      count = sameProduct.quantity + 1;\n      sameProduct.quantity = count;\n      const others = cart.filter(pd => pd.key !== toBeAddedKey);\n      newCart = [...others, sameProduct];\n    } else {\n      product.quantity = 1;\n      newCart = [...cart, product];\n    }\n\n    setCart(newCart);\n    addToDatabaseCart(product.key, count);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"twin-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"product-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, products.map(pd => React.createElement(Product, {\n    key: pd.key,\n    showAddToCart: true,\n    handleAddProduct: handleAddProduct,\n    product: pd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"cart-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Cart, {\n    cart: cart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/review\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"main-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Review Order\")))));\n};\n\nexport default Shop;","map":{"version":3,"sources":["E:/NodeJS/mongo/New folder/ema-john-with-auth/src/components/Shop/Shop.js"],"names":["React","useEffect","fakeData","useState","Product","Cart","addToDatabaseCart","getDatabaseCart","Link","Shop","first10","slice","products","setProducts","cart","setCart","savedCart","productKeys","Object","keys","previousCart","map","existingKey","product","find","pd","key","quantity","handleAddProduct","toBeAddedKey","sameProduct","count","newCart","others","filter"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport fakeData from '../../fakeData';\r\nimport { useState } from 'react';\r\nimport './Shop.css';\r\nimport Product from '../Product/Product';\r\nimport Cart from '../Cart/Cart';\r\nimport { addToDatabaseCart, getDatabaseCart } from '../../utilities/databaseManager';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Shop = () => {\r\n    const first10 = fakeData.slice(0,10);\r\n    const [products, setProducts] = useState(first10);\r\n    const [cart, setCart] = useState([]);\r\n    \r\n    useEffect(()=>{\r\n        const savedCart = getDatabaseCart();\r\n        const productKeys = Object.keys(savedCart);\r\n        const previousCart = productKeys.map( existingKey => {\r\n            const product = fakeData.find( pd => pd.key === existingKey);\r\n            product.quantity = savedCart[existingKey];\r\n            return product;\r\n        } )\r\n        setCart(previousCart);\r\n    }, [])\r\n\r\n    const handleAddProduct = (product) =>{\r\n        const toBeAddedKey = product.key;\r\n        const sameProduct = cart.find(pd => pd.key === toBeAddedKey);\r\n        let count = 1;\r\n        let newCart;\r\n        if(sameProduct){\r\n            count = sameProduct.quantity + 1;\r\n            sameProduct.quantity = count;\r\n            const others = cart.filter(pd => pd.key !== toBeAddedKey);\r\n            newCart = [...others, sameProduct];\r\n        }\r\n        else{\r\n            product.quantity = 1;\r\n            newCart = [...cart, product];\r\n        }\r\n        setCart(newCart);\r\n        addToDatabaseCart(product.key, count);\r\n    }\r\n\r\n    return (\r\n        <div className=\"twin-container\">\r\n            <div className=\"product-container\">\r\n                {\r\n                    products.map(pd => <Product \r\n                        key={pd.key}\r\n                        showAddToCart={true}\r\n                        handleAddProduct = {handleAddProduct}\r\n                        product={pd}\r\n                        ></Product>)\r\n                }\r\n            </div>\r\n            <div className=\"cart-container\">\r\n               <Cart cart={cart}>\r\n                    <Link to=\"/review\">\r\n                        <button className=\"main-button\">Review Order</button>\r\n                    </Link>\r\n               </Cart>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Shop;"]},"metadata":{},"sourceType":"module"}